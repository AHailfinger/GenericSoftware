@page "/realtimemeasurement"

@using System.Collections.Specialized
@using BlazorBootstrap
@using Microsoft.AspNetCore.Components.Web

@rendermode Microsoft.AspNetCore.Components.Web.RenderMode.InteractiveServer

@inject ApiServiceInfo ApiServiceInfo

<PageTitle>RealTimeMeasurement</PageTitle>

<Tabs @ref="tabsMainRef">
    <Tab Title="Tibber">
        <Content>
            <Tabs @ref="tabsTibberRef" NavStyle="NavStyle.Underline" Class="nav-center">
                <Tab Title="Diagram">
                    <Content>
                        @if (ApiServiceInfo.RealTimeMeasurement == null || !ApiServiceInfo.RealTimeMeasurement.Any())
                        {
                            <p>Loading...</p>
                        }
                        else
                        {
                            <LineChart @ref="realTimeMeasurementChart" Class="tibberLineChart" Height="40" HeightUnit="Unit.Vh" />
                            <LineChart @ref="deviceChart" Class="tibberLineChart" Height="20" HeightUnit="Unit.Vh" />
                            <CardGroup>

                                @foreach (var device in ApiServiceInfo.Devices.Where(x => x.DeviceType == "noah"))
                                {
                                    <Card Style="width:18rem;">
                                        <CardBody>
                                            <CardTitle>
                                                @device.DeviceType.ToUpper() <small Class="mb-2 text-muted">(@device.DeviceSn)</small>
                                            </CardTitle>                                            
                                            <ul class="list-group list-group-flush">
                                                <li class="list-group-item d-flex align-items-center">
                                                    <Icon Name="IconName.Battery" Size="IconSize.x2" />
                                                    <span class="px-3">
                                                        @ApiServiceInfo.DeviceNoahLastData.Where(x => x.deviceSn == device.DeviceSn).OrderByDescending(x => x.time).FirstOrDefault()?.battery1Soc %
                                                    </span>
                                                </li>
                                                <li class="list-group-item">
                                                    Current OutPower: @ApiServiceInfo.GetLastValuePerDevice(device.DeviceSn) W
                                                </li>
                                            </ul>
                                        </CardBody>
                                    </Card>
                                }
                                <Card Style="width:18rem;">
                                    <CardBody>
                                        <CardTitle>Last Indicator Values</CardTitle>
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item">
                                                AvgPowerLoad: @ApiServiceInfo.AvgPowerLoad
                                            </li>
                                            <li class="list-group-item">
                                                LastPowerValue: @ApiServiceInfo.LastPowerValue
                                            </li>
                                            <li class="list-group-item">
                                                NewPowerValue: @ApiServiceInfo.NewPowerValue
                                            </li>
                                            <li class="list-group-item">
                                                GrowattQueueCount: @ApiServiceInfo.GrowattValueChangeQueue.Count
                                            </li>
                                            <li class="list-group-item">
                                                LastOutputValue: @ApiServiceInfo.LastOutputValue
                                            </li>
                                        </ul>
                                    </CardBody>
                                </Card>
                            </CardGroup>
                            <LineChart @ref="priceChart" Class="tibberLineChart" Height="40" HeightUnit="Unit.Vh" />
                        }
                    </Content>
                </Tab>
                <Tab Title="Settings">
                    <Content>
                        <div class="mt-3 d-flex flex-column justify-content-center gap-3">
                            <div>
                                <Switch @bind-Value="ApiServiceInfo.AutoMode" Label="AutoMode (zero injection on low soc)" />
                            </div>
                            <div>
                                <Switch @bind-Value="ApiServiceInfo.SettingLoadBalanced" Label="LoadBalanced (zero injection on low soc)" />
                            </div>
                            <div>
                                AvgPowerLoadSeconds <RangeInput TValue="int" @bind-Value="ApiServiceInfo.SettingPowerLoadSeconds" Min="5" Max="60" TickMarks="AvgPowerLoadSecondsTickList" />
                            </div>
                            <div>
                                ApiLockSeconds <RangeInput TValue="int" @bind-Value="ApiServiceInfo.SettingLockSeconds" Min="100" Max="1000" TickMarks="ApiLockSecondsTickList" />
                            </div>
                            <div>
                                ApiOffsetAvg <RangeInput TValue="int" @bind-Value="ApiServiceInfo.SettingOffsetAvg" Min="0" Max="100" TickMarks="ApiOffsetAvgTickList" />
                            </div>
                            <div>
                                SettingToleranceAvg <RangeInput TValue="int" @bind-Value="ApiServiceInfo.SettingToleranceAvg" Min="0" Max="100" TickMarks="ApiOffsetAvgTickList" />
                            </div>
                        </div>
                    </Content>
                </Tab>
            </Tabs>
        </Content>
    </Tab>
    <Tab Title="Growatt">
        <Content>
            <Button Color="ButtonColor.Primary" @onclick="RefreshDeviceList">Refresh Device List</Button>
            <Button Color="ButtonColor.Primary" @onclick="ClearDeviceNoahTimeSegments">Clear Device Noah Timesegments </Button>

            @if (ApiServiceInfo.Devices == null || !ApiServiceInfo.Devices.Any())
            {
                <p>Loading...</p>
            }
            else
            {
                <ul>
                    @foreach (var device in ApiServiceInfo.Devices)
                    {
                        <li>@device.DeviceType : @device.DeviceSn </li>
                    }
                </ul>
            }

            <Button Color="ButtonColor.Primary" @onclick="RefreshNoahs">Refresh Noah Devices</Button>
            <Button Color="ButtonColor.Primary" @onclick="RefreshNoahLastData">Refresh Noah Device last data</Button>

            @if (ApiServiceInfo.DeviceNoahInfo == null || !ApiServiceInfo.DeviceNoahInfo.Any())
            {
                <p>Loading...</p>
            }
            else
            {
                <Tabs @ref="tabsGrowattRef">
                    @foreach (var deviceInfo in ApiServiceInfo.DeviceNoahInfo)
                    {
                        <Tab Title="@($"{deviceInfo.Model} : {deviceInfo.DeviceSn}")">
                            <Content>
                                <div class="mt-3 d-flex">
                                    <div class="flex-column">
                                        <ul>
                                            @foreach (var property in deviceInfo.GetType().GetProperties())
                                            {
                                                <li>@property.Name : @property.GetValue(deviceInfo)</li>
                                            }
                                        </ul>
                                    </div>
                                    <div class="flex-column ml-3">
                                        <ul>
                                            @foreach (var lastData in ApiServiceInfo.DeviceNoahLastData.Where(x => x.deviceSn == deviceInfo.DeviceSn))
                                            {

                                                DateTime time = DateTimeOffset.FromUnixTimeMilliseconds(@lastData.time).DateTime;

                                                <li>@time,  Workmode: @lastData.workMode , Power(W): @lastData.ppv, PAC(W): @lastData.pac, ChargingModus: @lastData.totalBatteryPackChargingStatus , Charging(W): @lastData.totalBatteryPackChargingPower , SOC: @lastData.totalBatteryPackSoc</li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </Content>
                        </Tab>
                    }
                </Tabs>
            }
        </Content>
    </Tab>
</Tabs>




